<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware Development on Pygrum</title>
    <link>https://pygrum.github.io/tags/malware-development/</link>
    <description>Recent content in Malware Development on Pygrum</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© Pygrum</copyright>
    <lastBuildDate>Tue, 27 Feb 2024 18:47:18 +0000</lastBuildDate>
    <atom:link href="https://pygrum.github.io/tags/malware-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding the Windows Portable Executable, Part 1 - PE Format</title>
      <link>https://pygrum.github.io/posts/understanding-windows-pe-1-pe-format/</link>
      <pubDate>Tue, 27 Feb 2024 18:47:18 +0000</pubDate>
      <guid>https://pygrum.github.io/posts/understanding-windows-pe-1-pe-format/</guid>
      <description>Introduction This series aims to demonstrate how create tools based on your own research. To fully grasp how to work with Windows PEs, for use in malware development and analysis, we&amp;rsquo;re only using documentation from Microsoft. This approach helps me personally when it comes to developing new research, acquiring a well-rounded understanding of a topic, and improves my creativity. Hopefully it helps you too.&#xA;By the end of this article, we will have written a tool in C that extracts basic information from a given Windows PE.</description>
    </item>
  </channel>
</rss>
