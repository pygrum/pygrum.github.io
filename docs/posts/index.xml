<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pygrum</title>
    <link>https://pygrum.github.io/posts/</link>
    <description>Recent content in Posts on Pygrum</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jan 2024 23:29:54 +0000</lastBuildDate>
    <atom:link href="https://pygrum.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tackling Disassembled Structs in IDA - Malware Analysis</title>
      <link>https://pygrum.github.io/posts/tackling-disassembled-structs-in-ida/</link>
      <pubDate>Thu, 18 Jan 2024 23:29:54 +0000</pubDate>
      <guid>https://pygrum.github.io/posts/tackling-disassembled-structs-in-ida/</guid>
      <description>Reverse engineering software is a lot of work. Personally, the hardest part is figuring out which areas are worth examining further. Looking in the wrong places can cause you to miss valuable information.&#xA;One construct that can trip people up is struct representation in assembly. It can be unclear when a struct is being manipulated or accessed. After all, the struct is organised as a contiguous block of bytes, with each member residing sequentially in memory.</description>
    </item>
  </channel>
</rss>
